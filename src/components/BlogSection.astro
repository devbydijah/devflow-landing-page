---
// src/components/BlogSection.astro
import { getCollection } from 'astro:content';
import { getImage } from 'astro:assets';
import { ArrowRight } from 'lucide-astro';
import { getPexelsImage } from '../lib/pexels';

// 1. Fetch the base post data
const postsData = await getCollection('blog');

// 2. Fetch all cover images from Pexels concurrently
const postsWithImages = await Promise.all(
  postsData.map(async (post) => {
    const { imageUrl, imageAlt } = await getPexelsImage(post.data.coverImageQuery);
    return {
      ...post,
      data: {
        ...post.data,
        image: {
          url: imageUrl,
          alt: imageAlt,
        },
      },
    };
  })
);

// 3. Sort the enriched posts by date
const sortedPosts = postsWithImages.sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

const getReadingTime = (content: string) => {
  const wordsPerMinute = 200;
  const wordCount = content.split(/\s+/).length;
  return Math.ceil(wordCount / wordsPerMinute);
};

// Helper function to format date
function formatDate(date: Date) {
  return new Intl.DateTimeFormat('en-US', {
    year: 'numeric',
    month: 'short',
    day: 'numeric',
  }).format(date);
}
---

<section id="blog" class="bg-transparent text-white py-20">
  <div class="container mx-auto px-6">
    <div class="text-center mb-12">
      <h2 class="text-4xl font-bold">Latest from our blog</h2>
      <p class="text-gray-400 text-lg">Insights, tutorials, and updates from our team</p>
    </div>    <div class="grid md:grid-cols-3 gap-8">
      {sortedPosts.slice(0, 3).map((post) => (
        <div class="bg-gray-800 rounded-lg overflow-hidden flex flex-col transition-all duration-300 ease-in-out hover:scale-105 hover:shadow-2xl hover:shadow-blue-500/30">
          <a href={`/blog/${post.slug}/`} class="block">
            <img
              src={post.data.image.url}
              alt={post.data.image.alt}
              class="w-full h-48 object-cover"
              loading="lazy"
            />
          </a>
          <div class="p-6 flex flex-col flex-grow">
            <p class="text-gray-400 text-sm mb-1">
              {formatDate(post.data.pubDate)} &bull; {getReadingTime(post.body)} min read
            </p>
            <h3 class="text-xl font-bold mb-2">
              <a href={`/blog/${post.slug}/`} class="hover:text-blue-400 transition-colors">
                {post.data.title}
              </a>
            </h3>
            <p class="text-gray-300 text-sm mb-4 flex-grow">{post.data.description}</p>
            <a href={`/blog/${post.slug}/`} class="text-blue-500 hover:text-blue-400 font-semibold text-sm self-start transition-colors duration-300 flex items-center">
              Read more <ArrowRight class="w-4 h-4 ml-1" />
            </a>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  section {
    background-color: #0c111f; /* Dark blue background */
  }
  .bg-gray-800 {
    background-color: #1f2937; /* Slightly lighter card background */
  }
</style>
