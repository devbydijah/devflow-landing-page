---
import { getCollection, type CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro'; // Adjust layout path if needed
import { getImage } from 'astro:assets'; // Changed Image to getImage

export async function getStaticPaths() {
  const blogEntries: CollectionEntry<'blog'>[] = await getCollection('blog');
  return blogEntries.map((entry: CollectionEntry<'blog'>) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

interface Props {
  entry: CollectionEntry<'blog'>;
}

const { entry } = Astro.props;
const { Content } = await entry.render();

// Process image
type OptimizedImageAttrs = { src: string; attributes: Record<string, any>; alt: string; };
let optimizedImage: OptimizedImageAttrs | null = null;
if (entry.data.image && entry.data.image.url) {
  try {
    const imageResult = await getImage({
      src: entry.data.image.url,
      widths: [400, 800, 1200],
      formats: ["avif", "webp"],
    });
    optimizedImage = {
      src: imageResult.src,
      attributes: imageResult.attributes,
      alt: entry.data.image.alt,
    };
  } catch (e) {
    console.error(`Failed to optimize image ${entry.data.image.url} for slug ${entry.slug}:`, e);
  }
}

// Helper function to format date (can be moved to a utility file)
function formatDate(date: Date) {
  return new Intl.DateTimeFormat('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  }).format(date);
}
---

<Layout title={entry.data.title} description={entry.data.description}>
  <article class="prose prose-invert lg:prose-xl max-w-3xl mx-auto py-12 px-6">
    {optimizedImage ? (
      <div class="mb-8">
        <img
          src={optimizedImage.src}
          alt={optimizedImage.alt}
          {...optimizedImage.attributes}
          class="w-full rounded-lg shadow-lg"
          loading="lazy"
        />
      </div>
    ) : entry.data.image && entry.data.image.url && (
      // Fallback for non-optimized image if getImage failed
      <div class="mb-8">
        <img
          src={entry.data.image.url}
          alt={entry.data.image.alt}
          class="w-full rounded-lg shadow-lg"
          loading="lazy"
        />
      </div>
    )}
    <header class="mb-8 text-center">
      <h1 class="text-4xl md:text-5xl font-bold text-white mb-3">{entry.data.title}</h1>
      <p class="text-gray-400 text-lg">
        By {entry.data.author} on {formatDate(entry.data.pubDate)}
      </p>
      {entry.data.tags && entry.data.tags.length > 0 && (
        <div class="mt-4">
          {entry.data.tags.map((tag: string) => (
            <span class="inline-block bg-gray-700 text-gray-300 text-sm font-semibold mr-2 px-2.5 py-0.5 rounded-full">
              #{tag}
            </span>
          ))}
        </div>
      )}
    </header>
    
    <div class="text-gray-300">
      <Content />
    </div>
  </article>
</Layout>

<style is:global>
  .prose {
    /* Add any global prose overrides here if needed */
  }
  .prose h1, .prose h2, .prose h3, .prose h4, .prose h5, .prose h6 {
    color: #fff; /* Ensure headings are white for prose-invert */
  }
  .prose a {
    color: #60a5fa; /* Blue-400 for links */
    text-decoration: none;
  }
  .prose a:hover {
    text-decoration: underline;
  }
  .prose strong {
    color: #e5e7eb; /* Gray-200 for strong text */
  }
  .prose blockquote {
    border-left-color: #3b82f6; /* Blue-500 for blockquote border */
    color: #d1d5db; /* Gray-300 for blockquote text */
  }
  .prose code {
    background-color: #374151; /* Gray-700 for inline code background */
    color: #e5e7eb; /* Gray-200 for inline code text */
    padding: 0.2em 0.4em;
    border-radius: 0.25rem;
  }
  .prose pre {
    background-color: #1f2937 !important; /* Gray-800 for code block background */
    color: #d1d5db !important; /* Gray-300 for code block text */
    padding: 1em;
    border-radius: 0.375rem;
    overflow-x: auto;
  }
  .prose pre code {
    background-color: transparent !important;
    padding: 0;
  }
</style>
